@model HaloShare.Models.GameMapVariant

@{
	ViewBag.Title = "Delete '" + Model.Title + "'";
}

<div class="row">
	<div class="col-md-6">
		<div class="box box-primary">
			<div class="box-header">
				<h3 class="box-title">Variant Properties</h3>
			</div>
			@using (Html.BeginForm())
			{
				<div class="box-body">
					<div class="form-group">
						@Html.LabelFor(m => m.Title)
						@Html.TextBoxFor(m => m.Title, new { @class = "form-control", @readonly = "readonly" })
						@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						@Html.LabelFor(m => m.ShortDescription)
						@Html.TextAreaFor(m => m.ShortDescription, new { @class = "form-control", Rows = 2, @readonly = "readonly" })
						@Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						@Html.LabelFor(model => model.Description)
						@Html.TextAreaFor(m => m.Description, new { @class = "form-control", @readonly = "readonly", rows = 8 })
						@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
					</div>
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								@Html.LabelFor(m => m.IsStaffPick)
								@Html.CheckBoxFor(m => m.IsStaffPick, new { style = "display: block;", @readonly = "readonly" })
								@Html.ValidationMessageFor(model => model.IsStaffPick, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-group">
								@Html.LabelFor(m => m.MinPlayers)
								@Html.TextBoxFor(m => m.MinPlayers, new { @class = "form-control", @readonly = "readonly" })
								@Html.ValidationMessageFor(model => model.MinPlayers, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="col-md-3">
							<div class="form-group">
								@Html.LabelFor(m => m.MaxPlayers)
								@Html.TextBoxFor(m => m.MaxPlayers, new { @class = "form-control", @readonly = "readonly" })
								@Html.ValidationMessageFor(model => model.MaxPlayers, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					<div class="form-group">
						<a href="@Url.Action("Details", new { id = Model.Id })" class="btn btn-default">Cancel</a>
						<input type="submit" class="btn btn-danger" value="@(Model.IsDeleted ? "Undelete" : "Delete")" />
					</div>
				</div>
			}
		</div>
	</div>
	<div class="col-md-3">
		<div class="box box-primary">
			<div class="box-header">
				<h3 class="box-title">Variant Information</h3>
			</div>
			<div class="box-body">
				<dl class="dl-horizontal">
					<dt>Author</dt>
					<dd>@Html.ActionLink(Model.Author.UserName, "Details", "User", new { userName = Model.Author.UserName }, null)</dd>
					<dt>Release Date</dt>
					<dd>@Model.CreatedOn</dd>
					<dt>Variant Type</dt>
					<dd>@Model.GameMap.Name</dd>
					<dt>Rating</dt>
					<dd>@Model.Rating stars</dd>
					<dt>Rating Count</dt>
					<dd>@Model.RatingCount</dd>
					<dt>Downloads</dt>
					<dd>@Model.File.DownloadCount</dd>
					<dt>Reaction Count</dt>
					<dd>@Model.Reactions.Count()</dd>
					<dt>Staff Pick</dt>
					<dd>@(Model.IsStaffPick ? "Yes" : "No")</dd>
					<dt>Deleted</dt>
					<dd>@(Model.IsDeleted ? "Yes" : "No")</dd>
				</dl>
			</div>
		</div>
	</div>
</div>