@model HaloShare.Models.GameMapVariant

@{
	ViewBag.Title = "Edit Forge Variant";
}

<h1 class="page-header">Edit Forge Variant</h1>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)

		<div class="form-group">
			@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", Value = Model.Title.Replace("�", "") } })
				@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextAreaFor(m => m.ShortDescription, new { @class = "form-control", style = "height: 60px;" })
				@Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="panel panel-default">
					<div class="panel-body">
						<div class="btn-group btn-group-sm">
							<button type="button" class="btn btn-default btn-editor" data-type="bold" title="Bold"><i class="fa fa-bold"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="italic" title="Italic"><i class="fa fa-italic"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="underline" title="Underline"><i class="fa fa-underline"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="strikethrough" title="Strikethrough"><i class="fa fa-strikethrough"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="header" title="Header"><i class="fa fa-header"></i></button>
						</div>
						<div class="btn-group btn-group-sm">
							<button type="button" class="btn btn-default btn-editor" data-type="link" title="Link"><i class="fa fa-link"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="image" title="Image"><i class="fa fa-picture-o"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="gallery" title="Gallery"><i class="fa fa-th-list"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="youtube" title="YouTube"><i class="fa fa-youtube-play"></i></button>
						</div>
						<div class="btn-group btn-group-sm">
							<button type="button" class="btn btn-default btn-editor" data-type="align-left" title="Align Left"><i class="fa fa-align-left"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="align-center" title="Align Center"><i class="fa fa-align-center"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="align-right" title="Align Right"><i class="fa fa-align-right"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="align-justify" title="Align Justify"><i class="fa fa-align-justify"></i></button>
						</div>
						<div class="btn-group btn-group-sm">
							<button type="button" class="btn btn-default btn-editor" data-type="list-ordered" title="Ordered List"><i class="fa fa-list-ol"></i></button>
							<button type="button" class="btn btn-default btn-editor" data-type="list-unordered" title="Unordered List"><i class="fa fa-list-ul"></i></button>
						</div>

					</div>
					@Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 8, style = "border-top-left-radius: 0; border-top-right-radius: 0; max-width: 100%;" })
				</div>
				@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			<div class="hidden-xs hidden-sm col-md-2"></div>
			<div class="col-sm-6 col-md-5">
				<div class="row">
					@Html.LabelFor(model => model.MinPlayers, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.MinPlayers, new { htmlAttributes = new { @class = "form-control", min = "1" , max = "16" } })
						@Html.ValidationMessageFor(model => model.MinPlayers, "", new { @class = "text-danger" })
					</div>
				</div>

			</div>
			<div class="col-sm-6 col-md-5">
				<div class="row">
					@Html.LabelFor(model => model.MaxPlayers, htmlAttributes: new { @class = "control-label col-md-3" })
					<div class="col-md-9">
						@Html.EditorFor(model => model.MaxPlayers, new { htmlAttributes = new { @class = "form-control", min = "2", max = "16" } })
						@Html.ValidationMessageFor(model => model.MaxPlayers, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
		</div>

		@if (User.IsInRole("Mod"))
		{
			<div class="form-group">
				<div class="col-md-push-2 col-md-10">
					<label>
						@Html.CheckBoxFor(model => model.IsStaffPick) Staff Pick
					</label>
				</div>
			</div>
		}

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<div style="text-align: right;">
					<div class="btn-group">
						<a class="btn btn-danger" href="@Url.Action("Delete", new { id = Model.Id })">Delete</a>
						<a class="btn btn-default" href="@Url.Action("Details", new { slug = Model.Slug })">Cancel Changes</a>
					</div>
					<input type="submit" value="Save Changes" class="btn btn-primary" />
				</div>
			</div>
		</div>
	</div>
}

@section scripts {

	<script src="~/Scripts/Editor.js"></script>
	<script>
			var editor = new Editor("Description");
	</script>
}